name: Build

on:
  push:
    branches:
      - master

## use github repo
# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest #ubuntu-latest #self-hosted
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       ## use github repo
#       - uses: sonarsource/sonarqube-scan-action@master
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
## use docker image
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted #ubuntu-latest #self-hosted
    steps:
    - name: Clean up .scannerwork folder
      run: docker run -v "$(pwd):/usr/src" sonarsource/sonar-scanner-cli rm -rf .scannerwork
    
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker
      run: |
        docker run \
          --rm \
          -e SONAR_HOST_URL="https://dev-josh.stratevision.cc" \
          -e SONAR_SCANNER_OPTS="-Dsonar.projectKey=demo" \
          -e SONAR_TOKEN="sqp_d4eb217dbfcf60d4e8132e7fc7954f640a40bff7" \
          -v "${{ github.workspace }}:/usr/src" \
          sonarsource/sonar-scanner-cli
        
# # This is a basic workflow to help you get started with Actions

# name: CI

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the "master" branch
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: self-hosted

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!!!!

#       # - name: executing remote ssh commands using password
#       #   uses: appleboy/ssh-action@v0.1.10
#       #   with:
#       #     host: ${{ secrets.TC_HOST }}
#       #     username: ${{ secrets.TC_NAME }}
#       #     password: ${{ secrets.TC_PW }}
#       #     port: 22
#       #     script: docker ps

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.

#   job_1:
    
#     runs-on: self-hosted
#     name: Add 3 and 7
    
#     steps:
#       - shell: bash
#         run: |
#           expr 3 + 7 > math-homework.txt
#       - name: Upload math result for job 1
#         uses: actions/upload-artifact@v3
#         with:
#           name: homework
#           path: math-homework.txt
